apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    kustomize.component: aws-alb-ingress-controller
  name: alb-ingress-controller
  namespace: kubeflow
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    kustomize.component: aws-alb-ingress-controller
  name: alb-ingress-controller
rules:
- apiGroups:
  - ""
  - extensions
  resources:
  - configmaps
  - endpoints
  - events
  - ingresses
  - ingresses/status
  - services
  verbs:
  - create
  - get
  - list
  - update
  - watch
  - patch
- apiGroups:
  - ""
  - extensions
  resources:
  - nodes
  - pods
  - secrets
  - services
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    kustomize.component: aws-alb-ingress-controller
  name: alb-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alb-ingress-controller
subjects:
- kind: ServiceAccount
  name: alb-ingress-controller
  namespace: kubeflow
---
apiVersion: v1
data:
  loadBalancerScheme: internet-facing
kind: ConfigMap
metadata:
  labels:
    kustomize.component: istio-ingress
  name: istio-ingress-parameters
  namespace: istio-system
---
apiVersion: v1
data:
  clusterName: eksworkshop-eksctl
kind: ConfigMap
metadata:
  labels:
    kustomize.component: aws-alb-ingress-controller
  name: alb-ingress-controller-parameters
  namespace: kubeflow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    kustomize.component: aws-alb-ingress-controller
  name: alb-ingress-controller
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: alb-ingress-controller
      kustomize.component: aws-alb-ingress-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: alb-ingress-controller
        kustomize.component: aws-alb-ingress-controller
    spec:
      containers:
      - args:
        - --ingress-class=alb
        - --cluster-name=eksworkshop-eksctl
        - --aws-vpc-id=vpc-05c3e4439dc56e82b
        - --aws-region=us-east-1
        image: docker.io/amazon/aws-alb-ingress-controller:v1.1.5
        imagePullPolicy: Always
        name: alb-ingress-controller
      serviceAccountName: alb-ingress-controller
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:307915334735:certificate/a1148c28-d928-45d4-9e08-a3eeb6861f4a
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/success-codes: 200,302
    external-dns.alpha.kubernetes.io/hostname: platforminnovation.net
    kubernetes.io/ingress.class: alb
  labels:
    kustomize.component: istio-ingress
  name: istio-ingress
  namespace: istio-system
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: ssl-redirect
          servicePort: use-annotation
        path: /*
      - backend:
          serviceName: istio-ingressgateway
          servicePort: 80
        path: /*
